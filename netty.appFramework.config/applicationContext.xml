<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- 激活bean的注解配置 -->
	<context:annotation-config />
	<!-- context:property-placeholder 只能引入一个properties文件，如果要多个，则可以多次配置，还可以设置order来配置加载的优先级 -->
	<context:property-placeholder location="classpath:ds.properties" />
	<context:property-placeholder location="classpath:log4j.properties" />
	<context:component-scan base-package="cn.com.silence.notice.*"/>
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="url"  value="${mysql.url}"/>
		<property name="driverClassName" value="${mysql.driver}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<property name="maxIdle" value="${dbcp2.maxIdle}" />
		<property name="minIdle" value="${dbcp2.minIdle}" />
		<property name="initialSize" value="${dbcp2.initialSize}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dbcp2.timeBetweenEvictionRunsMillis}" />
		<property name="poolPreparedStatements" value="${dbcp2.poolPreparedStatements}" />
		<property name="maxOpenPreparedStatements" value="${dbcp2.maxOpenPreparedStatements}" />
		<property name="removeAbandonedTimeout" value="${dbcp2.removeAbandonedTimeOut}" />
		<property name="testOnBorrow" value="${dbcp2.testOnBorrow}" />
		<property name="testOnReturn" value="${dbcp2.testOnReturn}" />
		<property name="testWhileIdle" value="${dbcp2.testWhileIdle}" />
		<property name="validationQuery" value="${dbcp2.validationQuery}" /> 
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource"  ref="dataSource"/>
	</bean>
	
	<bean id="noticeTimerJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
        <property name="jobClass" value="netty.appFramework.common.NoticeTimerJob"></property>  
        <property name="durability" value="true" />      
    </bean>  
    
	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="noticeTimerJob" />
		<!-- run every morning at 6 AM -->
		<!-- <property name="cronExpression" value="0 0 6 * * ?" /> -->
		<!-- <property name="cronExpression" value="0 0/1 * * * ?" /> --> <!-- 每分钟 -->
		<property name="cronExpression" value="*/10 * * * * ?" /> <!-- 每秒 -->
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean>
</beans>