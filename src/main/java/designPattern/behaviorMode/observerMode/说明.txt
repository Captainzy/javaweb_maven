观察者模式和发布/订阅模式经常使用，起初不了解这两个模式的实现时，在网上看一些资料，很多介绍都将两种模式混淆在一起，认为他们是同一个模式、一样的实现。

后来看了一些设计模式的书籍，感觉两种模式还是有本质的区别，具体如下：
观察者模式至少需要维护两个对象
	顾名思义：有观察者对象，肯定也得有观察者需要关注的目标对象，在观察者模式实习的时候，观察者对象需要定义一个统一的接口，在目标对象发生某些改变时，
	调用（触发）观察者的对应的方法，通知观察者到底发生了那些变化。
发布订阅模式，只需要注册订阅器上的一个事，而订阅器发生某些事件，则会触发事件通道里面的函数，触发器并不会关心其他任何对象和任何接口
不同点：
观察者模式：是将调用方法放置在每个不同的观察者这对应的方法中。
发布订阅模式：是将调用方法统一放在调度中心,重点是将消息“广播”。当目标对象触发某些事件时，观察者模式是通过调用具体的观察者方法实现通观察者，而发布订阅方式是直接让调度中心去告诉要通知的对象。

在实现自定义事件方面我觉得使用发布/订阅模式更为合适，简单、耦合性比较低。使用发布订阅模式时，我们关注那个对象，只需要在这个注册这个对象的对应的事件即可，降低了订阅者和发布者直接的耦合