门面模式的定义
        --->门面模式(Facade Pattern)也叫做外观模式,是一种比较常用的封装模式
        --->要求一个子系统的外部与其内部的通信必须通过一个统一的对象进行。门面模式提供一个高层次的接口,使得子系统更易于使用。
        --->门面模式注重“统一的对象”,也就是提供一个访问子系统的接口,除了这个接口不允许有任何访问子系统的行为发生
        --->这正是我们设计所需要的模式,不改变子系统对外暴露的接口、方法,只改变内部的处理逻辑,其他兄弟模块的调用产生了不同的结果,确实是一个非常棒的设计。这就是门面模式
二：门面模式的角色
● Facade门面角色
        客户端可以调用这个角色的方法。此角色知晓子系统的所有功能和责任。一般情况下,本角色会将所有从客户端发来的请求委派到相应的子系统去,也就说该角色没有实际的业务逻辑,只是一个委托类。
● subsystem子系统角色
        可以同时有一个或者多个子系统。每一个子系统都不是一个单独的类,而是一个类的集合。子系统并不知道门面的存在。对于子系统而言,门面仅仅是另外一个客户端而已。
        
优点：
	松散耦合：客户端与子系统解耦，让子系统内部的模块能更容易扩展和维护。
	简单易用：客户端只需要跟门面类交互就可以了。
	更好划分访问层次：有些方法是对系统外的，有些方法是系统内部使用的。把需要暴露给外部的功能集中到 门面中，这样既方便客户端使用，也很好地隐藏了内部的细节。
缺点：
	不符合开闭原则：所谓的开闭原则是软件工程里面一个最基本的原则：对扩展开放，对修改关闭。换句话说，你的系统可以提供新的功能模块而不必进行修改。
	
自我理解：门面就是子系统类的组合。其实就是采用了组合方式。